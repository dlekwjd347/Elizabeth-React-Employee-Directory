{"version":3,"sources":["utils/dataHook.js","components/TableBody/tableBody.js","components/TableRow/tableRow.js","components/SearchSection/search.js","components/Navbar/nav.js","utils/API.js","components/DataArea/dataArea.js","components/Main/main.js","components/Wrapper/wrapper.js","components/Header/header.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaHook","React","createContext","TableBody","hook","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","TableRow","id","headings","width","style","onClick","handleSort","toLowerCase","SearchSection","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","Wrapper","props","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yZAMeA,G,MAJMC,IAAMC,cAAc,KCmDxBC,EAjDC,WACd,IAAMC,EAAOC,qBAAWL,GAWxB,OACI,oCAC0CM,IAAzCF,EAAKG,eAAeC,cAAc,SAAkEF,IAA9CF,EAAKG,eAAeC,cAAc,GAAGC,KAC1FL,EAAKG,eAAeC,cAAcE,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,MAAOF,EAAuC,EAAvCA,KAAMG,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC3E,OACE,wBAAIC,IAAKL,EAAMM,MACb,wBAAIC,UAAQ,QAAQC,UAAU,gBAC5B,yBACEC,IAAKR,EAAQS,OACbC,IAAK,qBAAuBb,EAAKc,MAAQ,IAAMd,EAAKe,KACpDL,UAAU,oBAGd,wBAAID,UAAQ,OAAOC,UAAU,0BAC1BV,EAAKc,MADR,IACgBd,EAAKe,MAErB,wBAAIN,UAAQ,QAAQC,UAAU,gBAC3BN,GAEH,wBAAIK,UAAQ,QAAQC,UAAU,gBAC5B,uBAAGM,KAAM,UAAYX,EAAOY,OAAO,WAChCZ,IAGL,wBAAII,UAAQ,MAAMC,UAAU,gBAjCxC,SAAoBQ,GAChB,IAAMC,EAAYD,EAAKE,MAAM,KACvBC,EAAOF,EAAU,GAKvB,MADqB,CAHPA,EAAU,GACPA,EAAU,GAAGC,MAAM,KACf,GACaC,GAAMC,KAAK,KA4BlCC,CAAWjB,EAAIY,WAMxB,uCCNKM,G,MApCE,WACb,IAAM7B,EAAOC,qBAAWL,GAExB,OAEI,yBAAKmB,UAAU,kBACX,2BACIe,GAAG,QACHf,UAAU,mDAEV,+BACI,4BACKf,EAAKG,eAAe4B,SAASzB,KAAI,YAAsB,IAAnBD,EAAkB,EAAlBA,KAAM2B,EAAY,EAAZA,MACvC,OACI,wBACIjB,UAAU,MACVH,IAAKP,EACL4B,MAAO,CAAED,SACTE,QAAS,WACLlC,EAAKmC,WAAW9B,EAAK+B,iBAGxB/B,EACD,0BAAMU,UAAU,kBAOpC,kBAAC,EAAD,UCXDsB,G,YApBO,WAClB,IAAMrC,EAAOC,qBAAWL,GAExB,OACI,yBAAKmB,UAAU,aACX,0BAAMA,UAAU,eACZ,2BACIA,UAAU,uBACVuB,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAU,SAAAC,GAAC,OAAI1C,EAAK2C,mBAAmBD,MAE3C,4BAAQ3B,UAAU,mBAAmBuB,KAAK,UAA1C,cCHDM,MAVf,WACI,OACI,yBAAK7B,UAAU,iDAEhB,yBAAKA,UAAU,qBACd,kBAAC,EAAD,S,iBCPO,EACD,WACN,OAAO8B,IAAMC,IAAI,0CC6GRC,G,MA1GA,WAAO,IAAD,EACuBC,mBAAS,CACjDC,MAAO,GACPC,MAAO,UACP9C,cAAe,GACf2B,SAAU,CACR,CAAE1B,KAAM,QAAS2B,MAAO,MAAOkB,MAAO,WACtC,CAAE7C,KAAM,OAAQ2B,MAAO,MAAOkB,MAAO,WACrC,CAAE7C,KAAM,QAAS2B,MAAO,MAAOkB,MAAO,WACtC,CAAE7C,KAAM,QAAS2B,MAAO,MAAOkB,MAAO,WACtC,CAAE7C,KAAM,MAAO2B,MAAO,MAAOkB,MAAO,cAVrB,mBACd/C,EADc,KACEgD,EADF,KA8FnB,OAXAC,qBAAU,WACRC,IAAeC,MAAK,SAAAC,GAClBC,QAAQC,IAAIF,EAAQG,KAAKH,SACzBJ,EAAkB,2BACbhD,GADY,IAEf8C,MAAOM,EAAQG,KAAKH,QACpBnD,cAAemD,EAAQG,KAAKH,gBAG/B,IAGD,kBAAC,EAAaI,SAAd,CACEC,MAAO,CAAEzD,iBAAgBwC,mBA1BF,SAAAkB,GACzB,IAAMC,EAASD,EAAMvC,OAAOsC,MACtBG,EAAe5D,EAAe8C,MAAMa,QAAO,SAAAE,GAC/C,IAAIC,EAASD,EAAK3D,KAAKc,MAAMiB,cAAgB,IAAM4B,EAAK3D,KAAKe,KAAKgB,cAEpE,GADEoB,QAAQC,IAAIK,EAAQG,IACuB,IAA1CA,EAAOC,QAAQJ,EAAO1B,eACvB,OAAO4B,KAITb,EAAkB,2BAAKhD,GAAN,IAAsBC,cAAe2D,MAgBP5B,WAlF9B,SAAAgC,GACjB,IAAIC,EAAejE,EAAe4B,SAC/B+B,QAAO,SAAAO,GAAI,OAAIA,EAAKhE,OAAS8D,KAC7B7D,KAAI,SAAA+D,GAAI,OAAIA,EAAKnB,SACjBoB,WAGDF,EADmB,YAAjBA,EACa,SAEA,UAGjB,IA+BMG,EAAcpE,EAAeC,cAAcoE,MA/B9B,SAACC,EAAGC,GACrB,MAAqB,WAAjBN,OAEiBlE,IAAfuE,EAAEN,GACG,OACiBjE,IAAfwE,EAAEP,IACH,EAGW,SAAZA,EACAM,EAAEN,GAAShD,MAAMwD,cAAcD,EAAEP,GAAShD,OAC5B,QAAZgD,EACFM,EAAEN,GAASS,IAAMF,EAAEP,GAASS,IAE5BH,EAAEN,GAASQ,cAAcD,EAAEP,SAGjBjE,IAAfuE,EAAEN,GACG,OACiBjE,IAAfwE,EAAEP,IACH,EAEW,SAAZA,EACAO,EAAEP,GAAShD,MAAMwD,cAAcF,EAAEN,GAAShD,OAC7B,QAAZgD,EACDO,EAAEP,GAASS,IAAMH,EAAEN,GAASS,IAE5BF,EAAEP,GAASQ,cAAcF,EAAEN,OAKlCU,EAAkB1E,EAAe4B,SAASzB,KAAI,SAAA+D,GAElD,OADAA,EAAKnB,MAAQmB,EAAKhE,OAAS8D,EAAUC,EAAeC,EAAKnB,MAClDmB,KAGTlB,EAAkB,2BACbhD,GADY,IAEfC,cAAemE,EACfxC,SAAU8C,QAgCV,kBAAC,EAAD,MACA,yBAAK9D,UAAU,aACZZ,EAAeC,cAAc0E,OAAS,EAAI,kBAAC,EAAD,MAAe,kC,MC/FrDC,MARf,WACI,OACE,oCACE,kBAAC,EAAD,QCAQC,MALhB,SAAiBC,GACb,OACI,yBAAKlE,UAAU,aAAakE,EAAMC,W,MCQ3BC,MATf,WACI,OACE,yBAAKpE,UAAU,UACb,kDACA,mG,MCUOqE,MAXf,WACE,OACE,yBAAKrE,UAAU,OAChB,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCCesE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3C,MAAK,SAAA4C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.dd7f3304.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataAreaHook = React.createContext({\r\n\r\n});\r\n\r\nexport default DataAreaHook;","import React, { useContext } from \"react\";\r\nimport \"./style.css\"\r\nimport DataAreaHook from '../../utils/dataHook';\r\n\r\nconst TableBody = () => {\r\n    const hook = useContext(DataAreaHook);\r\n\r\n    function formatDate(date){\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate =[month, day, year].join(\"-\");\r\n        return formattedDate;\r\n    }\r\n    return (\r\n        <tbody>\r\n        {hook.developerState.filteredUsers[0] !== undefined && hook.developerState.filteredUsers[0].name !== undefined ? (\r\n          hook.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n            return (\r\n              <tr key={login.uuid}>\r\n                <td data-th=\"Image\" className=\"align-middle\">\r\n                  <img\r\n                    src={picture.medium}\r\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                    className=\"img-responsive\"\r\n                  />\r\n                </td>\r\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                  {name.first} {name.last}\r\n                </td>\r\n                <td data-th=\"Phone\" className=\"align-middle\">\r\n                  {phone}\r\n                </td>\r\n                <td data-th=\"Email\" className=\"align-middle\">\r\n                  <a href={\"mailto:\" + email} target=\"__blank\">\r\n                    {email}\r\n                  </a>\r\n                </td>\r\n                <td data-th=\"DOB\" className=\"align-middle\">\r\n                  {formatDate(dob.date)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </tbody>\r\n    );\r\n  }\r\n  \r\n  export default TableBody;","import React, { useContext } from \"react\";\r\nimport TableBody from \"../TableBody/tableBody\";\r\nimport \"./style.css\";\r\nimport DataAreaHook from '../../utils/dataHook';\r\n\r\nconst TableRow = () => {\r\n    const hook = useContext(DataAreaHook);\r\n\r\n    return (\r\n\r\n        <div className=\"datatable mt-5\">\r\n            <table\r\n                id=\"table\"\r\n                className=\"table table-striped table-hover table-condensed\"\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {hook.developerState.headings.map(({ name, width }) => {\r\n                            return (\r\n                                <th\r\n                                    className=\"col\"\r\n                                    key={name}\r\n                                    style={{ width }}\r\n                                    onClick={() => {\r\n                                        hook.handleSort(name.toLowerCase());\r\n                                    }}\r\n                                >\r\n                                    {name}\r\n                                    <span className=\"pointer\"></span>\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <TableBody />\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableRow;","import React, { useContext } from \"react\";\r\nimport DataAreaHook from '../../utils/dataHook';\r\nimport \"./style.css\"\r\n\r\nconst SearchSection = () => {\r\n    const hook = useContext(DataAreaHook);\r\n\r\n    return (\r\n        <div className=\"searchbox\">\r\n            <form className=\"form-inline\">\r\n                <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    onChange={e => hook.handleSearchChange(e)}\r\n                />\r\n                <button className=\"btn my-2 my-sm-0\" type=\"submit\">\r\n                    Search\r\n                 </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchSection;","import React from 'react';\r\nimport \"./style.css\";\r\nimport SearchSection from \"../SearchSection/search\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n       <div className=\"search-area col-4\">\r\n        <SearchSection />\r\n    </div>\r\n</nav>\r\n    );\r\n}\r\nexport default Nav;","import axios from 'axios';\r\n\r\nexport default {\r\n    getUsers: function(){\r\n        return axios.get('https://randomuser.me/api/?results=50')\r\n    }\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport TableRow from \"../TableRow/tableRow\";\r\nimport Navbar from \"../Navbar/nav\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\nimport DataAreaHook from \"../../utils/dataHook\"\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n      users: [],\r\n      order: \"descend\",\r\n      filteredUsers: [],\r\n      headings: [\r\n        { name: \"Image\", width: \"10%\", order: \"descend\" },\r\n        { name: \"name\", width: \"10%\", order: \"descend\" },\r\n        { name: \"phone\", width: \"20%\", order: \"descend\" },\r\n        { name: \"email\", width: \"20%\", order: \"descend\" },\r\n        { name: \"dob\", width: \"10%\", order: \"descend\" }\r\n      ]\r\n    });\r\n  \r\n    const handleSort = heading => {\r\n      let currentOrder = developerState.headings\r\n        .filter(elem => elem.name === heading)\r\n        .map(elem => elem.order)\r\n        .toString();\r\n  \r\n      if (currentOrder === \"descend\") {\r\n        currentOrder = \"ascend\";\r\n      } else {\r\n        currentOrder = \"descend\";\r\n      }\r\n  \r\n      const compareFnc = (a, b) => {\r\n        if (currentOrder === \"ascend\") {\r\n          // account for missing values\r\n          if (a[heading] === undefined) {\r\n            return 1;\r\n          } else if (b[heading] === undefined) {\r\n            return -1;\r\n          }\r\n          // numerically\r\n          else if (heading === \"name\") {\r\n            return a[heading].first.localeCompare(b[heading].first);\r\n          } else if (heading === \"dob\") {\r\n            return a[heading].age - b[heading].age;\r\n          } else {\r\n            return a[heading].localeCompare(b[heading]);\r\n          }\r\n        } else {\r\n          if (a[heading] === undefined) {\r\n            return 1;\r\n          } else if (b[heading] === undefined) {\r\n            return -1;\r\n          }\r\n          else if (heading === \"name\") {\r\n            return b[heading].first.localeCompare(a[heading].first);\r\n          }else if (heading === \"dob\") {\r\n            return b[heading].age - a[heading].age;\r\n          }  else {\r\n            return b[heading].localeCompare(a[heading]);\r\n          }\r\n        }\r\n      };\r\n      const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n      const updatedHeadings = developerState.headings.map(elem => {\r\n        elem.order = elem.name === heading ? currentOrder : elem.order;\r\n        return elem;\r\n      });\r\n  \r\n      setDeveloperState({\r\n        ...developerState,\r\n        filteredUsers: sortedUsers,\r\n        headings: updatedHeadings\r\n      });\r\n    };\r\n  \r\n    const handleSearchChange = event => {\r\n      const filter = event.target.value;\r\n      const filteredList = developerState.users.filter(item => {\r\n        let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n        console.log(filter, values)\r\n      if(values.indexOf(filter.toLowerCase()) !== -1){\r\n        return item\r\n      };\r\n      });\r\n  \r\n      setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      API.getUsers().then(results => {\r\n        console.log(results.data.results);\r\n        setDeveloperState({\r\n          ...developerState,\r\n          users: results.data.results,\r\n          filteredUsers: results.data.results\r\n        });\r\n      });\r\n    }, []);\r\n  \r\n    return (\r\n      <DataAreaHook.Provider\r\n        value={{ developerState, handleSearchChange, handleSort }}\r\n      >\r\n        <Navbar />\r\n        <div className=\"data-area\">\r\n          {developerState.filteredUsers.length > 0 ? <TableRow /> : <div></div>}\r\n        </div>\r\n      </DataAreaHook.Provider>\r\n    );\r\n  };\r\n  \r\n  export default DataArea;","import React from \"react\";\r\nimport DataArea from \"../DataArea/dataArea\";\r\nimport \"./style.css\";\r\n\r\nfunction Main () {\r\n    return (\r\n      <>\r\n        <DataArea />\r\n      </>\r\n    );\r\n  };\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <div className=\"container\">{props.children}</div>\r\n    )\r\n}\r\n export default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header () {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Employee Directory</h1>\r\n        <p>Click on each heading to sort results or search to filter results.</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Header;","import React from 'react';\nimport Main from \"./components/Main/main\";\nimport Wrapper from \"./components/Wrapper/wrapper\";\nimport Header from \"./components/Header/header\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   <Wrapper>\n     <Header />\n     <Main />\n   </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}